
CREATE DATABASE chapter02;
-- 查看创建的数据库
show CREATE DATABASE chapter02;

-- 指定数据库
use chapter02;
-- 查询使用的是哪个数据库
select DATABASE();
-- 查询数据库中有哪些表
show TABLES;

use mysql;
select DATABASE();
show TABLES;

-- 删除数据库
DROP DATABASE chapter03;

create DATABASE chapter03;

use chapter03;

create table employee(
	EmployeeID CHAR(9),
	Name VARCHAR(50),
	Gender Enum('男','女'),
	Age Int UNSIGNED,
	JobPosition Enum('业务经理','开发人员','顾问'),
	Salary Decimal(10,2),
	JoinedAt DATETIME,
	Address text
);

-- 查看表结构
Desc employee;
-- 显示名为 chapter03 的数据库是如何创建的（包括创建语句和选项）,
show create DATABASE chapter03;
-- 查看表创建语句
show CREATE table employee;

CREATE TABLE `employee` (
  `EmployeeID` char(9) DEFAULT NULL,
  `Name` varchar(50) DEFAULT NULL,
  `Gender` enum('男','女') DEFAULT NULL,
  `Age` int unsigned DEFAULT NULL,
  `JobPosition` enum('业务经理','开发人员','顾问') DEFAULT NULL,
  `Salary` decimal(10,2) DEFAULT NULL,
  `JoinedAt` datetime DEFAULT NULL,
  `Address` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

;
-- 删除表
drop table employee;

-- 全字段数据插入(插入值必须与表字段顺序完全一致)
INSERT INTO employee values('EMP-00001','张三','男',34,'业务经理',20000,'2000-01-15 15:00:00','上海市');

-- 全字段数据插入(插入值必须与表字段顺序完全一致)
INSERT INTO employee
values(
	'EMP-00001',
	'张三',
	'男',
	34,
	'业务经理',
	20000,
	'2000-01-15 15:00:00',
	'上海市'
	);

-- shift + TAB 回到初始位置

-- 部分字段插入
INSERT INTO employee(EmployeeID,Name,Gender,Age,JobPosition,Salary)
Values('EMP-00002','李四','女',28,'开发人员',15000);

-- 部分字段插入,颠倒顺序
INSERT INTO employee(EmployeeID,Gender,Name,Age,JobPosition,Salary)
Values('EMP-00002','女','李四',28,'开发人员',15000);

-- 全字段一次插入多行
INSERT 	into employee VALUES
	('EMP-00003','王五','男',25,'开发人员',10000,'2015-07-28 13:00:00','北京市'),
	('EMP-00004','赵六','女',32,'顾问',8000,'2019-11-12','杭州市'),
	('EMP-00005','孙七','女',29,'顾问',9000,'2021-10-13','南京市');

-- 部分字段一次插入多行
INSERT INTO employee(EmployeeID,Name,Gender,Age,JobPosition,Salary)
Values
	('EMP-00006','周八','男',28,'开发人员',20000),
	('EMP-00007','杨九','女',33,'顾问',7500);

-- 测试数据,验证数据类型对字段内容的限制
insert INTO employee VALUES
	('EMP-00008','郑十','男',34,'业务经理',23000,'2012-01-18','上海市');
insert INTO employee VALUES
	('EMP-000089','郑十','男',-34,'业务经理',23000,'2012-01-18','上海市');

drop table employee;


-- 数据表的约束规则
create table employee(
	EmployeeID CHAR(9)Not null,
	Name VARCHAR(50)Not null,
	Gender Enum('男','女'),
	Age Int UNSIGNED,
	JobPosition Enum('业务经理','开发人员','顾问')Not null,
	Salary Decimal(10,2)Not null,
	JoinedAt DATETIME,
	Address text
);

INSERT INTO employee values('EMP-00001','张三',null,null,'业务经理',20000,null,null);
INSERT INTO employee (EmployeeID,Name,JobPosition,Salary)values('EMP-00002','张四','业务经理',20000);

drop table employee;

-- 数据表的约束规则,使用默认值default
create table employee(
	EmployeeID CHAR(9)Not null,
	Name VARCHAR(50)Not null,
	Gender Enum('男','女'),
	Age Int UNSIGNED,
	JobPosition Enum('业务经理','开发人员','顾问')Not null,
	Salary Decimal(10,2)Not null Default 0,
	JoinedAt DATETIME,
	Address text
);

-- salary 没有写,就会自动填充0
INSERT INTO employee (EmployeeID,Name,JobPosition)values('EMP-00002','张四','业务经理');

drop table employee;

-- 数据表的约束规则,唯一性 unique

create table employee(
	EmployeeID CHAR(9)Not null Unique, #unique 也可以写在not null前
	Name VARCHAR(50)Not null,
	Gender Enum('男','女'),
	Age Int UNSIGNED,
	JobPosition Enum('业务经理','开发人员','顾问')Not null,
	Salary Decimal(10,2)Not null Default 0,
	JoinedAt DATETIME,
	Address text
);

INSERT INTO employee (EmployeeID,Name,JobPosition)values
	('EMP-00001','张三','业务经理'),
	('EMP-00002','李四','开发人员');

-- 数据表的约束规则,自动增长 auto_increment

drop table employee;

create table employee(
	EmployeeID Int Not null Unique Auto_increment,#这里就不能再写char(9)
	Name VARCHAR(50)Not null,
	Gender Enum('男','女'),
	Age Int UNSIGNED,
	JobPosition Enum('业务经理','开发人员','顾问')Not null,
	Salary Decimal(10,2)Not null Default 0,
	JoinedAt DATETIME,
	Address text
);

INSERT INTO employee (Name,JobPosition)values
	('张三','业务经理'),
	('李四','开发人员');

INSERT INTO employee (Name,JobPosition)values
	('王五','顾问');

DROP TABLE Employee;
-- 设置主键:非空且唯一
create table employee(
	EmployeeID Int Primary key Auto_increment,#直接写Primary key
	Name VARCHAR(50)Not null,
	Gender Enum('男','女'),
	Age Int UNSIGNED,
	JobPosition Enum('业务经理','开发人员','顾问')Not null,
	Salary Decimal(10,2)Not null Default 0,
	JoinedAt DATETIME,
	Address text
);

Desc employee;

create table employee(
	EmployeeID Int Auto_increment,
	Name VARCHAR(50)Not null,
	Gender Enum('男','女'),
	Age Int UNSIGNED,
	JobPosition Enum('业务经理','开发人员','顾问')Not null,
	Salary Decimal(10,2)Not null Default 0,
	JoinedAt DATETIME,
	Address text,
	PRIMARY KEY(EmployeeID)#直接写Primary key
);

主键插入数据,使用null占位,也可以直接忽略字段
insert into Employee(EmployeeID,Name,JobPosition) VALUES
(null,'张三','业务经理');

insert into Employee(Name,JobPosition) VALUES
('李四','开发人员'),
('王五','顾问');

-- 主键与外键
Drop table if exists employee;
Drop table if exists department;

create table if not exists Department(
					DeptID INT Primary Key AUTO_INCREMENT,
					DeptName VARCHAR(50) Not Null UNIQUE #DeptName VARCHAR(50) UNIQUE Not Null
);

Insert Into Department(DeptName) VALUES
('管理部'),('开发部'),('咨询部'); #代表3行数据

create table if not exists employee(
	EmployeeID Int Primary key Auto_increment,#直接写Primary key
	Name VARCHAR(50)Not null,
	Gender Enum('男','女'),
	Age Int UNSIGNED,
	JobPosition Enum('业务经理','开发人员','顾问')Not null,
	Salary Decimal(10,2)Not null Default 0,
	JoinedAt DATETIME,
	Address text,
	DeptID Int not null, #外键为非空
	Foreign Key(DeptID) REFERENCES Department(DeptID) #设置外键DeptID关联到Department(DeptID)
);

insert INTO Employee(Name,JobPosition,DeptID) VALUES
('张三','业务经理',1);

insert INTO Employee(Name,JobPosition,DeptID) VALUES
('李四','开发人员',2),
('王五','开发人员',2);


insert INTO Employee(Name,JobPosition,DeptID) VALUES
('赵六','顾问',3);

-- 二,SQL修改表结构

-- 修改表名称
alter  table Employee rename to Employees
-- 修改字段名称
alter table employees change column JoinedAt HireDate Datetime; #更改后的名称及类型

DESC employees;

-- 修改字段数据类型和约束
alter table employees modify column Name VARCHAR(30);
-- 添加字段
alter table employees add column birthday DATE;
-- 删除字段
alter table employees drop COLUMN birthday;
-- 删除主键
alter table employees drop PRIMARY key;
-- 去除auto_increment限制
alter table employees MODIFY COLUMN employeeID Int;
-- 添加主键
alter table employees add primary key (EmployeeID);
-- 重新添加auto_increment
alter table employees modify column employeeID int auto_increment;#auto_increment 这个影响的字段必须是主键

-- 删除外键
alter table Employees drop foreign key employees_ibfk_1;

-- 添加外键 : 右键,设计表,查看外键
alter table employees add FOREIGN key(DeptID) REFERENCES Department(DeptID);

-- 方法二:如何查看外键
show create table employees;
CREATE TABLE `employees` (
  `employeeID` int NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) DEFAULT NULL,
  `Gender` enum('男','女') DEFAULT NULL,
  `Age` int unsigned DEFAULT NULL,
  `JobPosition` enum('业务经理','开发人员','顾问') NOT NULL,
  `Salary` decimal(10,2) NOT NULL DEFAULT '0.00',
  `HireDate` datetime DEFAULT NULL,
  `Address` text,
  `DeptID` int NOT NULL,
  `birthday` date DEFAULT NULL,
  PRIMARY KEY (`employeeID`),
  KEY `DeptID` (`DeptID`),
  CONSTRAINT `employees_ibfk_1` FOREIGN KEY (`DeptID`) REFERENCES `Department` (`DeptID`) #外键在这里
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci


第四章 SQL操作数据

CREATE DATABASE chapter04;

USE chapter04;

DROP TABLE IF EXISTS Employee;

CREATE TABLE IF NOT EXISTS Employee (
	EmployeeID INT PRIMARY KEY AUTO_INCREMENT,
	Name VARCHAR ( 50 ) NOT NULL,
	Gender ENUM ( '男', '女' ),
	Age INT UNSIGNED,
	JobPosition ENUM ( '业务经理', '开发人员', '顾问' ) NOT NULL,
	Salary DECIMAL ( 10, 2 ) NOT NULL DEFAULT 0,
	JoinedAt DATE
);

INSERT INTO Employee(Name,Gender,Age,JobPosition,Salary,JoinedAt)
VALUES
('张吉','男',29,'开发人员',19000,'2014-05-21'),
('林国','女',29,'顾问',14400,'2015-06-15'),
('林玟','女',26,'业务经理',12200,'2019-12-08'),
('林雅','女',30,'顾问',28400,'2021-06-12'),
('江奕','女',33,'业务经理',26500,'2018-03-23'),
('刘柏','男',26,'顾问',13300,'2018-12-26'),
('阮建安','男',22,'开发人员',22500,'2018-12-29'),
('林子','男',35,'开发人员',25700,'2020-04-15'),
('夏志豪','男',30,'开发人员',17800,'2019-03-20'),
('吉茹','男',30,'业务经理',19800,'2021-01-18'),
('李中冰','女',27,'顾问',27600,'2019-07-15'),
('黄文隆','女',25,'顾问',24300,'2016-04-09'),
('谢彦','女',23,'业务经理',22700,'2019-08-09'),
('傅智翔','女',34,'业务经理',28100,'2018-02-10'),
('洪振霞','男',29,'顾问',16500,'2021-11-11'),
('刘姿婷','女',23,'顾问',14000,'2021-03-14'),
('荣姿康','男',26,'顾问',26800,'2020-05-06'),
('吕致盈','女',26,'顾问',23800,'2014-10-02'),
('方一','男',30,'开发人员',24700,'2017-11-21'),
('黎芸贵','男',24,'业务经理',15600,'2018-01-09'),
('郑伊','男',22,'顾问',13300,'2017-11-13'),
('雷进宝','女',28,'业务经理',29500,'2017-02-20'),
('吴美','女',28,'开发人员',14400,'2016-11-05'),
('吴心真','男',28,'开发人员',29100,'2015-04-26'),
('王美','女',22,'开发人员',28200,'2017-02-12'),
('郭芳','女',22,'顾问',27600,'2018-08-24'),
('李雅惠','男',25,'开发人员',28700,'2016-03-26'),
('陈文婷','男',23,'业务经理',22200,'2017-05-24'),
('曹敏侑','男',27,'顾问',25500,'2016-09-11'),
('王依','男',31,'业务经理',17000,'2015-06-22'),
('陈婉','男',24,'顾问',25100,'2020-06-05'),
('吴美','男',31,'顾问',28500,'2014-08-12'),
('蔡依','女',31,'顾问',13200,'2019-03-16'),
('郑昌','男',33,'业务经理',14200,'2018-06-11'),
('林家','男',34,'顾问',13000,'2016-12-19'),
('黄丽','女',27,'顾问',27400,'2020-08-01'),
('李育泉','男',34,'开发人员',18300,'2022-02-16'),
('黄芸欢','男',22,'开发人员',16400,'2015-04-16'),
('吴韵如','女',33,'业务经理',17800,'2014-03-15'),
('李肇芬','男',35,'顾问',12100,'2014-11-18'),
('卢木仲','男',34,'开发人员',22800,'2022-02-07'),
('李成白','女',33,'顾问',16600,'2014-09-11'),
('方兆','女',23,'顾问',13000,'2017-04-30'),
('刘翊惠','女',28,'业务经理',25200,'2017-08-01'),
('丁汉','女',24,'开发人员',15700,'2015-07-14'),
('吴佳瑞','男',26,'顾问',17100,'2017-05-22'),
('舒绿','女',33,'业务经理',22900,'2014-12-23'),
('周白','男',22,'开发人员',17400,NULL),
('张姿','女',32,'开发人员',18000,NULL),
('张虹','女',34,'开发人员',24800,NULL),
('周琼玟','女',33,'业务经理',18300,NULL),
('倪怡芳','男',28,'业务经理',29100,NULL),
('郭贵','男',35,'业务经理',23300,'2018-06-13'),
('杨佩芳','女',22,'顾问',18200,'2017-03-16'),
('黄文','男',23,'业务经理',26200,'2020-11-27'),
('黄盛','女',35,'业务经理',13100,'2014-10-26'),
('郑丽','男',35,'业务经理',12400,'2019-03-09'),
('许智云','男',22,'顾问',12600,'2019-05-29'),
('张孟','女',30,'顾问',25800,'2020-03-02'),
('李小爱','女',22,'开发人员',12800,'2022-03-05'),
('王恩','男',29,'开发人员',29100,'2017-07-19'),
('朱政廷','女',23,'顾问',12400,'2016-04-14'),
('邓诗涵','男',27,'开发人员',28400,'2020-11-03'),
('陈政倩','女',29,'业务经理',22000,'2014-10-18'),
('吴俊','男',23,'业务经理',17200,'2021-01-12'),
('阮馨','男',26,'业务经理',29000,'2014-12-27'),
('翁惠珠','女',27,'顾问',23700,'2014-11-25'),
('吴思翰','男',27,'开发人员',29700,'2017-02-06'),
('林佩','女',24,'开发人员',21200,'2017-10-15'),
('邓海来','女',34,'顾问',12100,'2021-02-08'),
('陈翊依','女',22,'业务经理',18900,'2020-03-16'),
('李建智','女',27,'顾问',16400,'2018-10-26'),
('武淑','女',27,'顾问',24300,'2019-12-07'),
('金雅琪','男',32,'业务经理',20000,'2014-09-14'),
('赖怡','女',22,'开发人员',18400,'2021-06-03'),
('黄育','男',24,'开发人员',27300,'2014-08-29'),
('张仪湖','男',34,'顾问',22800,'2015-01-13'),
('王俊','男',26,'业务经理',19600,'2017-10-14'),
('张诗','男',31,'顾问',28400,'2016-04-27'),
('林慧','女',35,'顾问',23300,'2016-01-24'),
('沈俊君','男',26,'开发人员',17500,'2021-06-23'),
('陈淑妤','女',32,'开发人员',21000,'2016-01-09'),
('李姿伶','男',28,'业务经理',30000,'2016-12-26'),
('高咏钰','男',28,'顾问',12300,'2018-08-11'),
('黄彦','男',34,'顾问',19200,'2021-11-23'),
('周孟儒','女',22,'业务经理',13900,'2021-06-05'),
('潘欣臻','女',24,'开发人员',13700,'2015-08-21'),
('李祯韵','男',28,'顾问',26900,'2017-12-09'),
('叶洁启','女',31,'业务经理',27100,'2014-10-13'),
('梁哲宇','女',31,'顾问',21800,'2016-10-03'),
('黄晓','男',25,'业务经理',19000,'2020-11-14'),
('杨雅','男',28,'业务经理',26700,'2017-02-13'),
('卢志','女',24,'开发人员',24700,'2021-08-01'),
('张茂以','男',28,'顾问',28000,'2018-12-01'),
('林婉','女',33,'开发人员',14500,'2017-06-17'),
('蔡宜','女',31,'开发人员',22400,'2016-01-26'),
('林珮','女',30,'顾问',20600,'2014-06-07'),
('黄柏仪','女',31,'开发人员',12300,'2018-01-17'),
('周逸','女',25,'业务经理',13100,'2021-01-09'),
('夏雅','女',25,'顾问',14600,'2015-01-02'),
('王采珮','男',31,'顾问',29200,'2018-05-20'),
('林孟','男',29,'开发人员',20200,'2017-03-31'),
('林竹','女',24,'顾问',23300,'2021-01-17'),
('王怡','男',31,'开发人员',20800,'2021-01-27'),
('王爱','女',25,'顾问',25100,'2015-09-04'),
('金佳蓉','女',29,'顾问',18800,'2016-04-08'),
('韩健','女',28,'开发人员',19800,'2020-01-22'),
('李士杰','女',26,'顾问',27600,'2014-07-22'),
('陈萱','男',23,'业务经理',23300,'2016-01-21'),
('苏姿','男',31,'顾问',18100,'2018-03-09'),
('张政','女',34,'开发人员',24700,'2019-05-29'),
('李志宏','女',24,'业务经理',23300,'2022-03-01'),
('陈素达','女',32,'开发人员',25700,'2018-01-29'),
('陈虹荣','男',34,'顾问',21000,'2015-12-21'),
('何美玲','男',35,'业务经理',18900,'2018-03-18'),
('李仪','女',27,'顾问',26200,'2021-05-18'),
('张俞','女',34,'开发人员',21400,'2016-09-04'),
('黄秋','男',33,'业务经理',20800,'2016-02-04'),
('潘吉','女',30,'开发人员',23100,'2016-10-25'),
('陈智','女',30,'顾问',13700,'2019-11-03'),
('蔡书玮','女',30,'顾问',15000,'2019-11-25'),
('陈信峰','女',25,'开发人员',28700,'2020-10-10'),
('林培','男',30,'业务经理',24000,'2019-11-23'),
('查瑜','男',28,'开发人员',29700,'2021-02-21'),
('黎慧','女',34,'业务经理',19700,'2018-12-18'),
('郑士','女',34,'开发人员',24900,'2021-08-27'),
('陈建','男',26,'开发人员',26800,'2017-01-20'),
('吴怡婷','女',22,'开发人员',23900,'2014-09-15'),
('徐紫','男',25,'开发人员',19600,'2020-02-16'),
('张博','男',22,'顾问',16300,'2018-05-27'),
('黎宏儒','男',25,'顾问',13800,'2018-04-25'),
('柯乔','男',32,'开发人员',20800,'2015-05-07'),
('胡睿','男',33,'顾问',23800,'2021-12-23'),
('王淑月','女',25,'业务经理',22700,'2021-04-17'),
('陈百菁','男',23,'业务经理',25200,'2014-03-24'),
('王雅','女',29,'开发人员',17500,'2015-01-17'),
('黄佩','女',25,'开发人员',27100,'2014-12-25'),
('李必','女',30,'开发人员',19500,'2019-11-28'),
('吴耀','男',35,'顾问',16800,'2020-03-06'),
('彭郁婷','男',31,'开发人员',21000,'2021-12-10'),
('王秀','女',32,'业务经理',25500,'2015-11-03'),
('谢佳儒','女',26,'业务经理',28500,'2020-07-04'),
('罗静','女',24,'顾问',28000,'2022-03-26'),
('杨舒','男',28,'业务经理',14900,'2015-09-29'),
('蔡政琳','女',23,'业务经理',12200,'2020-10-16'),
('杨绍瑜','男',26,'业务经理',14700,'2018-03-19'),
('金育木','女',22,'顾问',24700,'2017-07-28'),
('杨韦','女',30,'业务经理',25600,'2017-07-18'),
('韩宁','女',31,'开发人员',21600,'2014-09-20'),
('蒋廷','男',24,'业务经理',22900,'2018-10-02'),
('毛展','女',34,'顾问',14000,'2018-11-18'),
('廖婉宏','女',24,'顾问',17900,'2019-10-07'),
('黄怡强','男',28,'业务经理',27300,'2019-08-05'),
('郭冰','女',31,'顾问',20900,'2015-08-21'),
('黄伟依','男',33,'开发人员',27300,'2015-01-20'),
('叶元','女',30,'顾问',24500,'2016-12-07'),
('林智超','女',31,'顾问',25100,'2017-11-25'),
('李姿','女',30,'顾问',17900,'2016-11-10'),
('李莉火','男',34,'业务经理',17300,'2015-12-10'),
('邱雅','男',23,'开发人员',26700,'2020-10-25'),
('王淑','男',35,'顾问',13100,'2015-08-10'),
('陈枝','男',27,'开发人员',12400,'2016-07-21'),
('高成','女',32,'业务经理',25900,'2016-02-03'),
('徐采伶','男',30,'开发人员',19500,'2014-11-02'),
('杨大雪','女',31,'开发人员',21200,'2019-10-02'),
('林彦','男',29,'业务经理',26200,'2014-06-18'),
('李升','男',28,'顾问',15300,'2014-11-05'),
('邱宜','男',25,'开发人员',12700,'2022-02-24'),
('陈政','女',22,'顾问',22800,'2018-07-24'),
('李宜豪','男',32,'业务经理',27200,'2015-04-10'),
('陈宜','男',23,'业务经理',12100,'2021-12-06'),
('陈志','男',32,'顾问',20500,'2014-03-14'),
('阮柔治','男',35,'业务经理',21600,'2016-02-25'),
('林乐','女',29,'开发人员',19600,'2016-11-29'),
('简健','女',31,'业务经理',26100,'2021-07-12'),
('廖雅','女',32,'业务经理',29600,'2018-03-06'),
('梁佩芬','男',23,'顾问',25000,'2018-07-20'),
('苏玮','男',35,'开发人员',16600,'2021-09-03'),
('秦娇真','男',27,'顾问',28200,'2016-11-08'),
('谢佳','女',27,'开发人员',21900,'2018-10-16'),
('李仁','男',22,'业务经理',12200,'2015-05-20'),
('李佳','男',31,'顾问',20000,'2016-09-28'),
('郭贤','男',34,'业务经理',13500,'2020-01-26'),
('吴怡','男',24,'业务经理',17500,'2017-02-27'),
('陈怡婷','男',26,'业务经理',17100,'2016-06-05'),
('阮晴','男',32,'顾问',20300,'2020-08-12'),
('辛翔坤','男',28,'顾问',22100,'2021-12-21'),
('林孟富','男',28,'开发人员',15200,'2016-03-19'),
('刘美玲','男',26,'顾问',12500,'2018-06-29'),
('涂昀琬','男',22,'顾问',21000,'2018-10-23'),
('白凯修','女',25,'开发人员',13000,'2022-03-13'),
('黄蓉芳','男',29,'顾问',20300,'2017-05-05'),
('赵吟琪','男',35,'开发人员',20200,'2018-09-10'),
('张裕','男',22,'业务经理',29600,'2018-08-19'),
('石春','女',27,'顾问',15800,'2015-06-26'),
('方美君','女',28,'顾问',15300,'2020-08-28'),
('潘右博','女',34,'开发人员',16900,'2016-03-11'),
('俞星如','男',29,'业务经理',28500,'2015-04-14'),
('张冠','男',23,'开发人员',20100,'2017-03-11'),
('钟庭','男',22,'开发人员',19600,'2018-11-21'),
('叶茜','男',34,'开发人员',27800,'2016-10-20'),
('陈伯','男',32,'顾问',26500,'2020-05-07'),
('陈昭','女',25,'顾问',24500,'2015-12-29'),
('陈伟伦','男',28,'业务经理',22700,'2016-01-02'),
('黄雅慧','女',24,'开发人员',28400,'2018-03-28'),
('郭子','男',28,'顾问',18700,'2018-12-20'),
('黄彦','女',32,'开发人员',22500,'2021-03-27'),
('宋合','男',24,'业务经理',15500,'2014-09-28'),
('许雅婷','女',23,'开发人员',17100,'2016-04-06'),
('王圣','女',29,'业务经理',19700,'2021-01-06'),
('何伶元','女',24,'开发人员',28400,'2014-04-08'),
('钟伦','男',29,'业务经理',14900,'2020-08-26'),
('蔡佳','女',23,'开发人员',21500,'2022-03-05'),
('溥康','男',22,'顾问',26100,'2020-10-31'),
('冯成轩','男',30,'业务经理',28900,'2019-09-24'),
('陈嘉','男',35,'开发人员',28100,'2015-04-21'),
('吴惠劭','男',32,'业务经理',29500,'2020-02-08'),
('谢健铭','男',31,'开发人员',12400,'2014-11-26'),
('林怡','女',28,'业务经理',21700,'2020-09-26'),
('廖佳','男',25,'业务经理',25800,'2018-03-03'),
('李佩','男',28,'业务经理',16100,'2017-08-24'),
('何珮甄','女',35,'开发人员',28700,'2021-02-15'),
('谢晓','男',29,'开发人员',19500,'2020-05-13'),
('许彦霖','男',23,'顾问',23800,'2021-01-15'),
('林威','男',30,'顾问',20200,'2020-12-15'),
('周佳勋','女',26,'业务经理',17900,'2019-04-10'),
('林静','男',34,'顾问',20500,'2018-04-03'),
('周筠','男',22,'开发人员',23200,'2017-07-22'),
('陈仲','女',26,'开发人员',17900,'2018-02-25'),
('胡东','男',27,'开发人员',22200,'2021-09-01'),
('陈绍翰','女',35,'业务经理',17000,'2022-03-20'),
('梁姵来','女',34,'顾问',21700,'2017-07-18'),
('陈雅','男',27,'开发人员',29100,'2014-03-03'),
('张莉雯','女',33,'顾问',18500,'2014-03-12'),
('陈韦','男',22,'开发人员',17800,'2017-11-16'),
('林素','女',32,'业务经理',18900,'2021-01-03'),
('李菁','男',28,'业务经理',12200,'2015-04-27'),
('蔡玉婷','男',30,'开发人员',29600,'2020-01-08'),
('郑智钧','男',31,'业务经理',28600,'2015-01-26'),
('吴孟钰','女',31,'开发人员',19300,'2015-04-12'),
('蔡国伟','男',28,'开发人员',19300,'2019-05-27'),
('连俊达','女',33,'业务经理',12800,'2018-02-27'),
('李雅婷','男',27,'业务经理',15200,'2020-11-12'),
('李礼','男',33,'业务经理',19800,'2018-02-24'),
('李忆孝','男',24,'顾问',26200,'2014-06-15'),
('黄静','女',34,'业务经理',13700,'2017-06-05'),
('陈淳','女',32,'业务经理',15400,'2018-10-17'),
('李文','男',34,'顾问',26700,'2022-01-31'),
('林佳蓉','男',29,'开发人员',13200,'2014-08-31'),
('罗依茂','女',29,'业务经理',21800,'2017-02-17'),
('李淑佩','男',30,'业务经理',14700,'2017-08-15'),
('谢怡君','男',34,'开发人员',20700,'2022-01-16'),
('王美','男',33,'业务经理',28800,'2016-09-02'),
('黄慧学','女',23,'业务经理',13400,'2017-08-05'),
('邓幸','男',35,'开发人员',27500,'2014-12-21'),
('陈秀琬','男',31,'开发人员',21700,'2014-04-07'),
('许岳','女',22,'开发人员',28100,'2022-05-07'),
('许爱礼','女',26,'业务经理',22800,'2015-03-29'),
('谢一忠','男',27,'业务经理',20200,'2018-01-12'),
('简志','女',22,'顾问',18600,'2016-10-14'),
('赵若喜','男',28,'顾问',24900,'2018-06-25'),
('许承','男',28,'开发人员',12200,'2016-01-21'),
('姚哲维','男',33,'业务经理',22700,'2018-06-26'),
('苏俊','男',27,'业务经理',25800,'2018-12-15'),
('郭礼钰','男',33,'顾问',27000,'2017-12-02'),
('姜佩珊','女',26,'开发人员',20800,'2019-01-20'),
('张鸿信','男',22,'顾问',14800,'2021-10-22'),
('秦欣瑜','女',26,'开发人员',22100,'2017-09-16'),
('李旺','男',27,'顾问',26600,'2016-01-11'),
('陈怡','女',22,'开发人员',20300,'2016-12-05'),
('陈秀德','女',30,'业务经理',25300,'2019-06-10'),
('张佳','女',32,'开发人员',13000,'2014-08-06'),
('郑凯','男',28,'顾问',17800,'2021-02-09'),
('郑雅','女',22,'顾问',19400,'2021-04-17'),
('黄国妹','男',31,'顾问',13800,'2014-10-05'),
('林芳','男',27,'业务经理',29400,'2017-10-04'),
('江骏','女',33,'业务经理',25900,'2014-08-01'),
('黄儒纯','男',32,'顾问',25800,'2017-05-28'),
('王培伦','女',23,'顾问',17900,'2017-09-26'),
('陈蕙','男',25,'业务经理',27100,'2018-06-20'),
('蔡宜慧','女',29,'业务经理',17200,'2016-12-18'),
('陈信','女',31,'顾问',18900,'2020-10-17'),
('陈惠','男',27,'顾问',22000,'2020-07-01'),
('张琇纶','女',30,'开发人员',28100,'2019-11-30'),
('黄碧仪','男',33,'业务经理',29400,'2018-03-16'),
('陈志文','男',32,'业务经理',27600,'2021-12-25'),
('谢懿富','女',34,'开发人员',18400,'2018-12-27'),
('杨凡','女',28,'顾问',21200,'2015-12-31'),
('蔡秀琴','女',35,'业务经理',12100,'2016-01-15'),
('温惠玲','男',28,'业务经理',18700,'2020-05-20'),
('林宗其','男',30,'顾问',27500,'2017-12-13'),
('林绍泰','男',35,'业务经理',16900,'2019-04-03'),
('何佳','女',28,'业务经理',19000,'2015-09-19'),
('蔡辰纶','女',29,'业务经理',15600,'2015-03-29'),
('王雅雯','女',25,'开发人员',13800,'2017-11-30'),
('叶怡财','男',35,'开发人员',25000,'2020-03-15'),
('冯雅筑','男',35,'开发人员',24700,'2021-03-18'),
('李伦圣','男',25,'顾问',23000,'2019-05-16'),
('彭正','女',23,'顾问',26100,'2020-04-05'),
('刘小','女',25,'开发人员',20900,'2019-07-07'),
('温燕','男',31,'开发人员',27500,'2015-04-04'),
('刘佳','女',23,'业务经理',29000,'2018-12-07'),
('吴婷','女',25,'业务经理',16600,'2018-01-30'),
('杨怡君','男',33,'顾问',15200,'2015-09-23'),
('黄康','女',33,'开发人员',24800,'2021-11-30'),
('林辰','男',31,'业务经理',21000,'2020-05-01'),
('陈世人','男',23,'业务经理',28200,'2019-12-05'),
('吴佩','男',34,'业务经理',13200,'2021-02-19'),
('张伟','男',29,'顾问',15800,'2017-01-07'),
('刘友淳','女',31,'业务经理',13600,'2019-03-19'),
('张瑞','女',32,'开发人员',17500,'2018-02-04'),
('洪紫芬','女',23,'业务经理',29700,'2022-02-26'),
('邓家伟','女',22,'顾问',24100,'2019-12-30'),
('谢佩任','女',29,'顾问',13300,'2020-12-24'),
('戎郁文','男',35,'开发人员',15900,'2019-08-05'),
('李治火','男',30,'业务经理',23000,'2016-06-22'),
('林石','女',31,'业务经理',27400,'2016-08-18'),
('郑雅','女',24,'开发人员',18600,'2016-08-22'),
('胡台','男',33,'顾问',24800,'2017-09-22'),
('陈怡盈','男',24,'业务经理',28400,'2021-09-19'),
('阙石','女',26,'业务经理',26100,'2021-10-06'),
('林盈','女',22,'顾问',22000,'2016-07-07'),
('林志嘉','男',29,'开发人员',25000,'2014-03-28'),
('李秀','男',28,'顾问',19500,'2015-07-27'),
('王彦','男',28,'顾问',20900,'2019-01-26'),
('叶惟','女',34,'开发人员',23800,'2018-11-13'),
('郑星钰','女',33,'业务经理',27100,'2018-03-13'),
('邱贞','男',27,'顾问',22100,'2018-05-19'),
('姚扬云','男',35,'顾问',12000,'2017-07-06'),
('涂武盛','女',25,'开发人员',13700,'2016-09-14'),
('王雅','女',31,'业务经理',13700,'2018-11-17'),
('唐欣','女',28,'开发人员',20900,'2014-08-16'),
('陈政','男',25,'开发人员',24200,'2015-09-21'),
('陈育','女',33,'开发人员',26400,'2022-02-21'),
('吴惠雯','女',32,'顾问',25000,'2019-01-25'),
('李淑','女',35,'顾问',23300,'2020-06-23'),
('黄莉','男',33,'顾问',17800,'2016-09-15'),
('赖俊军','男',31,'开发人员',16400,'2018-04-24'),
('荆彦','女',22,'顾问',21300,'2021-10-06'),
('白怡均','男',32,'开发人员',14100,'2021-10-06'),
('林姿','男',28,'业务经理',23300,'2016-12-01'),
('林雅慧','男',35,'顾问',26100,'2020-06-12'),
('詹允坚','男',26,'开发人员',24400,'2017-07-16'),
('赖淑珍','女',27,'业务经理',24600,'2021-03-08'),
('吴惠','女',23,'顾问',24400,'2016-12-14'),
('李凯婷','男',30,'业务经理',22700,'2017-01-14'),
('林承','女',28,'顾问',13800,'2017-02-24'),
('刘亭宝','男',26,'业务经理',22500,'2015-10-28'),
('宋慧元','女',25,'业务经理',26600,'2020-10-11'),
('连书','女',25,'开发人员',13800,'2014-08-25'),
('余仪礼','女',22,'开发人员',27600,'2016-03-08'),
('袁哲仪','女',25,'开发人员',26100,'2020-06-22'),
('杜怡臻','女',31,'开发人员',21200,'2018-07-07'),
('潘孝','男',33,'业务经理',17000,'2017-07-22'),
('周志合','女',27,'业务经理',17800,'2021-06-25'),
('刘力','女',33,'业务经理',27500,'2021-07-23'),
('林钰','女',25,'开发人员',27100,'2020-03-09'),
('林怡','男',29,'开发人员',25100,'2020-10-29'),
('林俊','女',24,'顾问',16600,'2015-01-25'),
('蔡于','女',34,'业务经理',18900,'2021-08-20'),
('蔡雅惠','男',33,'顾问',29400,'2021-06-16'),
('汪喜','女',22,'业务经理',13300,'2020-12-26'),
('陈铭','女',31,'开发人员',22400,'2016-02-22'),
('郭子','男',29,'业务经理',29200,'2020-04-30'),
('许伦吉','男',35,'业务经理',24500,'2017-09-12'),
('陈佳','男',34,'顾问',25300,'2020-01-13'),
('赖英贤','女',34,'业务经理',29300,'2018-10-17'),
('吴嘉茹','男',35,'顾问',19100,'2018-10-29'),
('陈永桂','女',31,'顾问',13200,'2021-03-27'),
('张文','女',35,'业务经理',13700,'2014-05-03'),
('唐欣','男',32,'顾问',15000,'2016-02-26'),
('丁绍','男',34,'业务经理',16600,'2014-04-08'),
('王雅','男',34,'开发人员',26500,'2015-06-05'),
('叶柏','女',22,'业务经理',13500,'2018-01-30'),
('王婉萍','女',29,'顾问',24600,'2017-11-27'),
('王宗','男',25,'开发人员',13100,'2015-12-30'),
('刘心霖','女',34,'顾问',28600,'2015-04-13'),
('吴柏','男',25,'业务经理',27900,'2017-01-12'),
('陈怡臻','男',27,'顾问',29400,'2019-07-06'),
('杜士豪','男',30,'顾问',20700,'2016-02-10'),
('李春勋','男',32,'顾问',14400,'2019-11-29'),
('黄雅慧','女',28,'开发人员',19200,'2014-05-30'),
('吴乔茂','男',32,'开发人员',14800,'2022-03-05'),
('郑婉','女',34,'开发人员',23200,'2020-06-19'),
('李育','男',35,'业务经理',20700,'2017-08-21'),
('黄静','男',35,'开发人员',19700,'2016-10-29'),
('赵一蓉','男',32,'业务经理',19500,'2019-02-02'),
('邱萱','男',32,'开发人员',17300,'2019-12-09'),
('周立','男',32,'开发人员',21100,'2021-02-09'),
('李宝','男',28,'顾问',15200,'2015-03-07'),
('张信豪','女',35,'顾问',20900,'2019-11-30'),
('李昆霖','女',28,'顾问',15200,'2016-01-01'),
('陈俊安','男',22,'顾问',14200,'2020-06-12'),
('林建','男',25,'业务经理',18000,'2016-07-08'),
('黄韦','男',33,'开发人员',19400,'2016-12-03'),
('李美','男',34,'顾问',13400,'2021-11-22'),
('张政','男',31,'顾问',21200,'2020-04-15'),
('郑惠玲','女',30,'顾问',18300,'2021-01-28'),
('柳忠','女',24,'顾问',24100,'2017-02-21'),
('黄美','女',28,'业务经理',18800,'2021-07-16'),
('许怡君','男',24,'业务经理',25200,'2021-06-15'),
('吴崇','男',31,'顾问',14900,'2017-01-27'),
('邱承','男',34,'开发人员',21800,'2018-08-22'),
('叶得梅','女',31,'开发人员',12400,'2021-07-20'),
('陈祯月','女',29,'顾问',18300,'2021-04-27'),
('杨宛','女',27,'顾问',24500,'2018-01-31'),
('阮肇宪','男',28,'开发人员',22000,'2016-11-12'),
('杨益','女',26,'业务经理',26200,'2021-01-16'),
('唐盛人','女',22,'开发人员',26200,'2014-07-23'),
('许平纬','男',25,'业务经理',26100,'2017-08-30'),
('许雅如','男',33,'业务经理',20400,'2017-11-27'),
('林秀绮','女',32,'顾问',21600,'2019-09-12'),
('刘昌','女',30,'顾问',20800,'2019-09-22'),
('张家荣','女',23,'业务经理',16300,'2020-01-02'),
('杨淑','女',23,'开发人员',22900,'2019-07-25'),
('吴俊','女',28,'业务经理',22100,'2015-06-07'),
('李彦','男',34,'顾问',24500,'2015-05-08'),
('李彦','女',34,'业务经理',20900,'2018-12-03'),
('王崇','女',22,'业务经理',26800,'2015-02-23'),
('王威全','女',33,'顾问',29000,'2022-02-22'),
('彭琳','男',22,'顾问',23100,'2019-09-25'),
('许志','女',29,'业务经理',17600,'2018-01-18'),
('陈嘉','女',23,'顾问',12400,'2022-05-10'),
('蔡志','男',33,'顾问',16800,'2020-01-13'),
('陈信','女',22,'开发人员',19500,'2014-11-16'),
('陈思','男',32,'业务经理',21100,'2017-01-05'),
('吴家','男',30,'开发人员',12500,'2018-11-16'),
('李宜','男',34,'顾问',12200,'2021-07-29'),
('杨毅民','女',24,'业务经理',25000,'2022-02-07'),
('林志平','女',26,'顾问',25700,'2014-06-21'),
('张坚','男',33,'顾问',16100,'2015-04-11'),
('林明春','女',29,'业务经理',25300,'2015-04-14'),
('戴火','男',29,'业务经理',22400,'2018-12-31'),
('傅予名','男',33,'开发人员',24100,'2020-09-28'),
('叶佩璇','女',33,'开发人员',25800,'2019-10-12'),
('陈雅雯','女',35,'开发人员',20400,'2020-06-29'),
('萧宗毅','女',28,'业务经理',21500,'2014-07-24'),
('郭淑','男',26,'顾问',18900,'2017-03-01'),
('刘淑卿','女',31,'顾问',16300,'2019-03-09'),
('陈雅萍','女',27,'开发人员',24600,'2019-07-15'),
('陈佩','男',32,'顾问',28100,'2019-06-02'),
('冯惠玲','女',28,'业务经理',12100,'2016-05-09'),
('吴乃亚','男',22,'业务经理',27900,'2017-06-09'),
('刘欣','男',22,'顾问',26500,'2019-10-25'),
('陈意婷','男',22,'开发人员',18900,'2018-04-15'),
('林明珠','男',29,'顾问',24900,'2016-05-31'),
('陈淑婷','男',32,'开发人员',17600,'2016-11-01'),
('徐宏','男',31,'顾问',20500,'2019-02-22'),
('李佳德','女',35,'顾问',29100,'2015-12-03'),
('蔡正信','女',28,'业务经理',12700,'2020-05-24'),
('李淑敏','男',25,'顾问',18800,'2015-03-28'),
('蒋佳','男',34,'开发人员',25400,'2019-10-20'),
('蔡佳','女',35,'顾问',15400,'2015-09-04'),
('简淑','男',32,'顾问',27300,'2020-09-07'),
('张雅菱','女',34,'开发人员',17600,'2021-08-29'),
('颜淳奇','男',25,'业务经理',23200,'2018-04-28'),
('刘芳','女',34,'顾问',22700,'2016-11-27'),
('陈俊','女',27,'开发人员',14200,'2016-07-13'),
('黄雯','女',29,'业务经理',15100,'2017-05-28'),
('侯文贤','男',24,'开发人员',18300,'2015-02-19'),
('郑雅雯','男',26,'业务经理',22300,'2016-07-21'),
('黄雅','女',35,'顾问',13800,'2016-03-03'),
('陈婉','女',25,'开发人员',22500,'2015-06-25'),
('郑智杰','男',27,'业务经理',12800,'2014-11-03'),
('林玉信','女',33,'开发人员',20800,'2018-02-11'),
('阮侑','男',26,'业务经理',15300,'2020-08-11'),
('潘怡','男',30,'开发人员',12800,'2022-02-05'),
('黄世祥','男',25,'业务经理',21400,'2014-03-22'),
('张韦','男',33,'顾问',19300,'2018-08-24'),
('黄彦慈','女',31,'顾问',21000,'2020-07-24'),
('张峻','女',30,'开发人员',20400,'2015-01-16'),
('宋轩','女',25,'业务经理',15500,'2016-04-27'),
('周妤军','女',24,'开发人员',19100,'2020-07-16'),
('江佩','女',26,'顾问',28900,'2014-12-11'),
('陈美芝','男',31,'业务经理',23500,'2020-01-01'),
('张伦启','男',24,'开发人员',19500,'2014-03-02'),
('陈敏爱','男',26,'顾问',12600,'2016-09-25'),
('杨毓','女',33,'顾问',21800,'2015-07-18'),
('谢姿君','男',26,'开发人员',20900,'2014-08-30'),
('赖姿泰','男',31,'顾问',16400,'2020-07-13'),
('黄圣','男',25,'开发人员',28100,'2018-03-05'),
('林柏','男',26,'顾问',16600,'2020-05-02'),
('黄馨','男',30,'业务经理',23600,'2021-04-27'),
('叶于','男',22,'开发人员',16200,'2020-04-14'),
('陈山茹','女',30,'顾问',20300,'2020-01-18'),
('魏得凤','男',35,'业务经理',13700,'2018-01-22'),
('张明','男',31,'顾问',12000,'2014-07-10'),
('林冠强','女',27,'顾问',29300,'2018-09-12'),
('李文荣','男',22,'开发人员',13300,'2019-11-18'),
('龚静','男',23,'开发人员',24600,'2018-09-02'),
('陈伟孝','男',27,'开发人员',17000,'2017-12-15'),
('刘信俊','女',34,'业务经理',22000,'2021-04-30'),
('李美治','女',34,'业务经理',27300,'2014-05-22'),
('徐景','男',30,'开发人员',20400,'2021-03-15'),
('刘怡','男',32,'开发人员',20000,'2020-04-15'),
('陈钰','女',35,'顾问',29200,'2014-05-22'),
('谢静','男',28,'顾问',25300,'2016-12-29'),
('戴惠','男',30,'业务经理',17900,'2017-04-13'),
('王香君','男',22,'开发人员',20400,'2018-05-03'),
('钟汉馨','男',30,'顾问',24700,'2021-07-01'),
('郑国','男',25,'业务经理',27800,'2018-10-02'),
('张哲','男',23,'顾问',12600,'2017-03-20'),
('詹南','男',31,'开发人员',20300,'2021-04-10'),
('潘秋福','男',30,'业务经理',26600,'2017-08-23'),
('黄奕','女',32,'顾问',28400,'2014-12-13'),
('郭琬','男',32,'顾问',27000,'2019-01-23'),
('冯家','男',22,'顾问',24900,'2015-05-30'),
('吴佩仁','男',28,'开发人员',13400,'2017-10-17'),
('周思','男',35,'业务经理',22200,'2017-03-05'),
('张柏钧','男',30,'业务经理',23000,'2018-01-26'),
('吴世伟','男',25,'顾问',20900,'2014-10-27'),
('朱佳琪','女',35,'顾问',12900,'2020-06-15'),
('陈宗馨','男',27,'开发人员',19700,'2019-03-14'),
('黄菁坚','男',30,'开发人员',21300,'2019-10-28'),
('郑建泉','男',33,'开发人员',22600,'2015-05-07'),
('许金','女',33,'开发人员',18300,'2018-01-25'),
('平信宏','女',24,'业务经理',19700,'2014-08-28'),
('蔡佳','男',35,'业务经理',27400,'2017-04-01'),
('杨佳宏','男',33,'顾问',12700,'2014-06-15'),
('陈皓雅','女',30,'业务经理',16200,'2018-03-13'),
('吴翊','男',28,'顾问',13200,'2017-12-26'),
('张佩','男',24,'开发人员',20800,'2020-05-27'),
('温欣','女',29,'顾问',14700,'2016-08-22'),
('王诗铭','女',35,'业务经理',14900,'2015-01-16'),
('许宜','男',32,'开发人员',23200,'2018-06-27'),
('林孟','女',34,'开发人员',14800,'2019-11-08'),
('黄善','女',31,'开发人员',20300,'2019-09-09'),
('王怡贵','男',24,'开发人员',27100,'2021-12-08'),
('许淑玫','男',31,'开发人员',19200,'2021-03-17'),
('张学玉','女',26,'业务经理',21600,'2020-03-14'),
('黄美','女',33,'业务经理',20400,'2021-04-29'),
('陈佳','男',26,'开发人员',27700,'2015-06-26'),
('宋其琪','女',22,'业务经理',27200,'2022-05-01'),
('陈致','女',30,'业务经理',20100,'2021-04-19'),
('王建福','女',26,'业务经理',15100,'2017-01-23'),
('刘莹睿','女',30,'开发人员',21000,'2016-07-20'),
('陈正','男',23,'开发人员',21500,'2021-12-09'),
('冯萱雨','男',31,'开发人员',14000,'2019-06-26'),
('金淑敏','女',23,'顾问',22500,'2014-05-16'),
('宋廷','男',22,'开发人员',20600,'2014-08-14'),
('吴承','男',30,'开发人员',28100,'2021-03-29'),
('陈家莲','女',30,'业务经理',23800,'2021-04-07');

-- 查询全字段
select * from chapter04.employee;
-- 先指定数据库
use chapter04;
select * from Employee;

select Name,Salary From Employee;
select Employee.Name, Employee.salary From Employee;

-- 为字段取名字
Select Name as "姓名", Salary as "月薪" From Employee;

-- 根据主键取某一条记录
Select
	EmployeeID as '工号',
	Name as "姓名",
	Age as '年龄',
	Salary as '月薪'
From employee
WHERE employeeID = 10;

-- 修改全部数据
Update Employee SET Salary = Salary + 1000;

-- 修改指定数据
Update Employee Set salary = Salary + 1000,Age = Age + 10 WHere EmployeeID = 10;

-- 删除全部数据
delete from Employee;

select * from Employee;
-- 删除一条数据
delete from employee Where EmployeeID = 10;

-- 数据拼接(CONCAT(str1,str2,...) with Seperator
select concat(Name,Gender,Age) From Employee;
select concat(Name,',',Gender,',',Age) AS '员工基本信息' From Employee;
select CONCAT_WS(',',Name,Gender,Age,JobPosition) AS '员工基本信息' From Employee;

-- 数据排序
select EmployeeID, Name, Salary From employee Order by salary asc;
select EmployeeID, Name, Salary, Age From employee Order by salary desc, Age asc; #先排序salary, 然后再排AGE

-- 限制行数
select EmployeeID, Name, Salary, Age From employee Order by salary desc, Age asc Limit 10;
-- 第一个数字:从某条数据开始,第二个数字表示展示多少行
select EmployeeID, Name, Salary, Age From employee Order by salary desc, Age asc Limit 1, 10;

-- 数据的去重
select Name, Gender, Age From Employee;
select distinct Gender From employee;
select distinct Age From employee Order by Age;

-- 比较运算符
select* from employee where employeeID = 10;
select* from employee where Age != 33;
select* from employee where Age <> 33;

-- 逻辑运算符
 select* from employee where Age >= 30 And salary > 20000;

--  范围查询(IN, Not In)( Between and)
select* from employee where Age in(32, 33, 34);
select* from employee where Age Not in(32, 33, 34);
select* from employee where Age = 32 OR age= 33 or Age = 34;

select* from employee where Age between 32 and 34;

-- 空值查询(is null)
select * from employee where JoinedAt is null;
select * from employee where JoinedAt is not null;

-- 模糊查询 % 任意多个字符,单个字符_
select * from employee Where Name Like'杨%';
select * from employee Where Name Like'杨_';
select * from employee Where Name Like'%国%';
select * from employee Where Name Like'__';

-- 聚合函数
-- 分组查询
-- 统计各个岗位的平均薪资
select JObposition,avg(salary) from employee where EmployeeID <= 10 GROUP BY JObposition;
select JObposition,avg(age) from employee where EmployeeID <= 10 GROUP BY JObposition;

-- where针对表数据进行过滤,having针对分组后的结果数据进行过滤;
select Gender,count(*) from employee Group by Gender Having Gender = '男';
select Gender,count(*) from employee where Gender = '男';

-- 查询语句的执行顺序
SELECT
age, round(avg(salary),0) as avg_salary
From employee
Where JobPosition = '开发人员'
Group by age
having avg_salary >= 21000
Order by Age DESC
Limit 3;

SELECT * From employee Where JobPosition = '开发人员';
SELECT round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age;
SELECT round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age having avg_salary >= 21000;
SELECT age,round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age having avg_salary >= 21000;
SELECT age,round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age having avg_salary >= 21000 Order by Age DESC;
SELECT age,round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age having avg_salary >= 21000 Order by Age DESC Limit 3;

-- group_concat 函数
SELECT Age,Group_concat(Name) From employee Where JobPosition = '开发人员' Group by Age;

-- WITH ROLLUP
select jobposition, Gender, count(*), sum(salary) From employee Group by JobPosition, Gender Order by Jobposition, Gender;
select jobposition, count(*), sum(salary) From employee Group by JobPosition Order by Jobposition;
select count(*), sum(salary) From employee;

select jobposition, Gender, count(*), sum(salary) From employee Group by JobPosition, Gender with ROLLUP;

-- 九、SQL常用函数

-- abs 返回绝对值
select abs(100);
select abs(-100);
select abs(salary - 25000) From Employee;
-- pow 幂运算
select pow(2,3); #二的3次方

-- 判断正负数
select sign(1);
select sign (0);
SELECT sign (-1);
select Name,sign(salary - 25000) as sign from Employee order by sign desc;

-- rand, 返回一个从0到1的随机值

-- 查询全字段
select * from chapter04.employee;
-- 先指定数据库
use chapter04;
select * from Employee;

select Name,Salary From Employee;
select Employee.Name, Employee.salary From Employee;

-- 为字段取名字
Select Name as "姓名", Salary as "月薪" From Employee;

-- 根据主键取某一条记录
Select
	EmployeeID as '工号',
	Name as "姓名",
	Age as '年龄',
	Salary as '月薪'
From employee
WHERE employeeID = 10;

-- 修改全部数据
Update Employee SET Salary = Salary + 1000;

-- 修改指定数据
Update Employee Set salary = Salary + 1000,Age = Age + 10 WHere EmployeeID = 10;

-- 删除全部数据
delete from Employee;

select * from Employee;
-- 删除一条数据
delete from employee Where EmployeeID = 10;

-- 数据拼接(CONCAT(str1,str2,...) with Seperator
select concat(Name,Gender,Age) From Employee;
select concat(Name,',',Gender,',',Age) AS '员工基本信息' From Employee;
select CONCAT_WS(',',Name,Gender,Age,JobPosition) AS '员工基本信息' From Employee;

-- 数据排序
select EmployeeID, Name, Salary From employee Order by salary asc;
select EmployeeID, Name, Salary, Age From employee Order by salary desc, Age asc; #先排序salary, 然后再排AGE

-- 限制行数
select EmployeeID, Name, Salary, Age From employee Order by salary desc, Age asc Limit 10;
-- 第一个数字:从某条数据开始,第二个数字表示展示多少行
select EmployeeID, Name, Salary, Age From employee Order by salary desc, Age asc Limit 1, 10;

-- 数据的去重
select Name, Gender, Age From Employee;
select distinct Gender From employee;
select distinct Age From employee Order by Age;

-- 比较运算符
select* from employee where employeeID = 10;
select* from employee where Age != 33;
select* from employee where Age <> 33;

-- 逻辑运算符
 select* from employee where Age >= 30 And salary > 20000;

--  范围查询(IN, Not In)( Between and)
select* from employee where Age in(32, 33, 34);
select* from employee where Age Not in(32, 33, 34);
select* from employee where Age = 32 OR age= 33 or Age = 34;

select* from employee where Age between 32 and 34;

-- 空值查询(is null)
select * from employee where JoinedAt is null;
select * from employee where JoinedAt is not null;

-- 模糊查询 % 任意多个字符,单个字符_
select * from employee Where Name Like'杨%';
select * from employee Where Name Like'杨_';
select * from employee Where Name Like'%国%';
select * from employee Where Name Like'__';

-- 聚合函数
-- 分组查询
-- 统计各个岗位的平均薪资
select JObposition,avg(salary) from employee where EmployeeID <= 10 GROUP BY JObposition;
select JObposition,avg(age) from employee where EmployeeID <= 10 GROUP BY JObposition;

-- where针对表数据进行过滤,having针对分组后的结果数据进行过滤;
select Gender,count(*) from employee Group by Gender Having Gender = '男';
select Gender,count(*) from employee where Gender = '男';

-- 查询语句的执行顺序
SELECT
age, round(avg(salary),0) as avg_salary
From employee
Where JobPosition = '开发人员'
Group by age
having avg_salary >= 21000
Order by Age DESC
Limit 3;

SELECT * From employee Where JobPosition = '开发人员';
SELECT round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age;
SELECT round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age having avg_salary >= 21000;
SELECT age,round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age having avg_salary >= 21000;
SELECT age,round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age having avg_salary >= 21000 Order by Age DESC;
SELECT age,round(avg(salary),0) as avg_salary From employee Where JobPosition = '开发人员' Group by Age having avg_salary >= 21000 Order by Age DESC Limit 3;

-- group_concat 函数
SELECT Age,Group_concat(Name) From employee Where JobPosition = '开发人员' Group by Age;

-- WITH ROLLUP
select jobposition, Gender, count(*), sum(salary) From employee Group by JobPosition, Gender Order by Jobposition, Gender;
select jobposition, count(*), sum(salary) From employee Group by JobPosition Order by Jobposition;
select count(*), sum(salary) From employee;

select jobposition, Gender, count(*), sum(salary) From employee Group by JobPosition, Gender with ROLLUP;

-- 九、SQL常用函数

-- abs 返回绝对值
select abs(100);
select abs(-100);
select abs(salary - 25000) From Employee;
-- pow 幂运算
select pow(2,3); #二的3次方

-- 判断正负数
select sign(1);
select sign (0);
SELECT sign (-1);
select Name,sign(salary - 25000) as sign from Employee order by sign desc;

-- rand, 返回一个从0到1的随机值
select rand();
SELECT * From employee ORDER BY rand();

-- ceil 大于等于指定值的最小整数值
-- FLOOR(X)返回小于等于指定值的最小大整数值
-- ROUND(X)返回指定小数点的四舍五入值
-- TRUNCATE(X,D)返回指定小数点位数的截断值
-- FORMAT(X,D)小数点后面保留多少位,前面的3位做一个分隔

-- sql常用文本函数

CREATE TABLE STRINGTEST (
	ENNAME VARCHAR(50),
	CHNAME VARCHAR(50)
);

INSERT INTO STRINGTEST VALUES
('  Arnie  ', '  阿尼'),
('   Kalyna   ', '  卡丽娜  '),
('   Bennie  ', ' 本尼  '),
('  Gaiane  ', '  盖恩 '),
('   tomasz  ', ' 托马兹  ');

select * from stringtest;

-- ltrim, rtrim,trim 文本空格处理
select enname, ltrim(enname) from stringtest;# 清除左侧空格
select enname, rtrim(enname) from stringtest;# 清除右侧空格
select enname, ltrim(rtrim(enname))from stringtest;# 同时清除左右两侧
select enname, trim(enname)from stringtest;# 同时清除左右两侧

-- 针对查询结果建表
drop table stringtest2;

create table stringtest2
select trim(enname) as Enname,trim(chname) as Chname from stringtest;

-- CONCAT(str1,str2,...) CONCAT_ws,文本连接
select concat(trim(enname),'-',trim(chname)) from stringtest;

-- replace 文本替换,区分大小写
select Enname,Replace(Enname,'A','B') From stringtest2; #这里区分大小写

-- left,right,substring 文本截取
select Enname,Left(Enname,2),Right(Enname,2) From stringtest2;
select Enname,substring(Enname,2,3) From stringtest2;#从2开始截取3个

-- LENGTH(str)文本计数
select enname,length(enname) From stringtest2;

-- instr,文本查找
select enname,instr(enname,'a') From stringtest2;#不在乎大小写

-- 想提取包含字符右侧的文本内容
-- 需要先定位a字符首次出现的位置
select instr(enname,'a') from stringtest2;
-- 然后截取a右侧的文本内容
select enname,substring(enname,instr(enname,'a'),length(enname)-instr(enname,'a')+1) from stringtest2; #6-2+1

-- upper,lower,文本
select enname,upper(enname),lower(enname) from stringtest2;

-- SQL常用日期时间函数
-- 当前日期
select curdate();
select curtime();
select now(); #当前日期和时间

-- 获取年份,季度,月份,
-- date、year,quarter,month,day,WEEKOFYEAR(date),
select date(now());
select year(NOW());
select quarter(NOW());
select month(now());
select day(NOW());
select WEEKOFYEAR(NOW());

-- TIME、hour,minute,second
select time(now());
select hour(now());
select minute(now());
select second(now());

-- extarct
select extract(year from now());
select extract(quarter from now());
select extract(month from now());
select extract(week from now());

-- 日期和时间格式设置
select now();
select DATE_FORMAT(now(),'%Y年%m月%d日%m分%s秒');
select DATE_FORMAT(now(),'%Y%m%d');
select Name,JOinedAt,DATE_FORMAT(JoinedAt,'%Y年%m月%d日') From Employee;
select Name,extract(year from JOinedAt) from employee;

-- 日期计算,date_add,datediff
select now(),DATE_ADD(now(),INTERVAL 3 year);
select date(now()),date(DATE_ADD(now(),INTERVAL 3 year));
select date(now()),date(DATE_ADD(now(),INTERVAL -3 day));

select DATEDIFF('2022-8-11','2022-5-17');#左侧比右侧大

-- SQL空值函数
-- isnull,判断数据是否为空


CREATE TABLE Products(
	Pid INT PRIMARY KEY AUTO_INCREMENT,
	ProductName VARCHAR(50) NOT NULL,
	UnitPrice Decimal(10,2) NOT NULL,
	UnitsInStock INT,
	UnitsOnOrder INT
);

INSERT INTO Products VALUES
(NULL, '苹果手机', 9800, 100, 20),
(NULL, '华为手机', 8800, 200, 40),
(NULL, '小米手机', 7000, 200, NULL);

select productName,ISnull(UnitsInstock),Isnull(UnitsOnOrder) from products;

-- if NULL 如果数据为空,返回替换值
select productName,UnitPrice * (IFnull(UnitsInstock,0) + Ifnull(UnitsOnOrder,0)) from products;

-- 数据类型转换cast 和 coalesce 函数返回数据列表中第一个非空的值
desc employee;
select Name,cast(JoinedAt as datetime) FRom Employee;
select  concat(Name,'_',Salary) from employee;

select  concat(Name,'_',cast(Salary as decimal(10,0))) from employee;
select  concat(Name,'_',cast(Salary as char(5))) from employee;#采用固定长度:5位字符

select coalesce(null,null,1);

alter table Products add column Orderamount Decimal(10,2);
UPDATE Products set Orderamount = UnitPrice * UnitsOnOrder where pid = 1;

select ProductName, OrderAmount from Products;
-- 有数据展示
-- 如果为null,再次计算
-- 如果还是null,给出提示,无法计算
select ProductName, coalesce(OrderAmount,UnitPrice * UnitsOnOrder,'无法计算') from Products;

-- if函数(条件,结果1,结果2)
select if (5>2,1,2);
-- 基于员工工资,划分等级,低于20000元,是低薪资级别,否则,设置为高薪资级别
select * ,if (salary < 20000,'low','high') as SAL_Grade from employee;
-- 基于员工工资,划分等级,低于20000元,是低薪资级别,大于20000小于25000, 是中等薪资级别, 大于25000 是高等级别, 否则,设置为高薪资级别
select * ,if (salary < 20000,'low',if (salary <= 25000,"Medium",'High') )as SAL_Grade from employee;

-- 统计低中高人员数量
select count(*) ,if (salary < 20000,'low',if (salary <= 25000,"Medium",'High') )as SAL_Grade from employee group by sal_grade;

-- case函数
-- 方式一
-- 基于员工工资,划分等级,低于20000元,是低薪资级别,否则,设置为高薪资级别
select * ,
(CASE
	WHEN salary < 20000 THEN 'Low'
	ELSE
		'High'
END) AS sal_Grade
from employee
ORDER BY sal_Grade;

-- 基于员工工资,划分等级,低于20000元,是低薪资级别,大于20000小于25000, 是中等薪资级别, 大于25000 是高等级别, 否则,设置为高薪资级别
select * ,
(CASE
	WHEN salary < 20000 THEN 'Low'
	WHEN salary <= 25000 THEN 'Medium'
	ELSE
		'High'
END) AS sal_Grade
from employee
ORDER BY sal_Grade;

-- 统计低中高人员数量
select count(*) ,
(CASE
	WHEN salary < 20000 THEN 'Low'
	WHEN salary <= 25000 THEN 'Medium'
	ELSE
		'High'
END) AS sal_Grade
from employee
Group BY sal_Grade;

-- employee表,展示时加一个DepartmentName字段
select *,
(CASE Jobposition, #基于岗位名称确定部门
	WHEN '开发人员' THEN '开发部'
  WHEN '顾问' THEN '咨询部'
	WHEN '业务经理' THEN '管理部'
	ELSE '其他部门'
		其他部门
END) as Department
From Employee
ORDER BY DepartmentName;

-- CASE 转置应用:匹配的上填充,匹配不上填充0,然后汇总求和

-- 先创建表
DROP TABLE IF EXISTS OrderInfo;

CREATE TABLE OrderInfo(
	CustomerName VARCHAR(50),
	Month VARCHAR(10),
	Amount INT
);

INSERT INTO OrderInfo VALUES('张三','1月',50),('张三','2月',100),('张三','3月',200),
('李四','1月',70),('李四','2月',100),('李四','3月',150),
('王五','1月',200),('王五','2月',300),('王五','3月',800);

SELECT * FROM OrderInfo;

-- case 过渡处理

select CustomerName as Customer, #CustomerName不变
(CASE WHEN Month = '1月' THEN Amount Else 0 END) as '1月', #一条一条数据处理 1月分别匹配这3行判断语句
(CASE WHEN Month = '2月' THEN Amount Else 0 END) as '2月',
(CASE WHEN Month = '3月' THEN Amount Else 0 END) as '3月'
FROM OrderInfo;

-- 分组
select CustomerName as Customer, #CustomerName不变
sum(CASE WHEN Month = '1月' THEN Amount Else 0 END) as '1月', #一条一条数据处理 1月分别匹配这3行判断语句
sum(CASE WHEN Month = '2月' THEN Amount Else 0 END) as '2月',
sum(CASE WHEN Month = '3月' THEN Amount Else 0 END) as '3月'
FROM OrderInfo
GROUP BY Customer;

-- 多表连接

DROP DATABASE IF EXISTS chapter11;

-- 创建数据库
CREATE DATABASE IF NOT EXISTS chapter11;

USE chapter11;

DROP TABLE IF EXISTS Employee;
DROP TABLE IF EXISTS Manager;
DROP TABLE IF EXISTS Department;

-- 部门表
CREATE TABLE IF NOT EXISTS Department(
	DeptID INT PRIMARY KEY AUTO_INCREMENT,
	DeptName VARCHAR(50) NOT NULL
);

INSERT INTO Department(DeptName) VALUES('总部'),('开发部'),('咨询部'),('财务部'),('行政部'),('人力部');

-- 经理表
CREATE TABLE IF NOT EXISTS Manager(
	ManagerID INT PRIMARY KEY AUTO_INCREMENT,
	ManagerName VARCHAR(50) NOT NULL,
	DeptID INT,
	FOREIGN KEY(DeptID) REFERENCES Department(DeptID) #外键 关联到Department(DeptID)
);

INSERT INTO Manager VALUES(NULL,'黄文隆',1),(NULL,'张吉',2),(NULL,'林玟',3),(NULL,'林雅',3),(NULL,'江奕',3),(NULL,'刘柏',4),(NULL,'吉茹',4);

-- 员工表
CREATE TABLE IF NOT EXISTS Employee(

-- Cross JOin
-- 查询员工信息以及所在的部门名称 78
select e.EmpName, d.DeptName
From Employee AS e, Department as d;

-- 什么是笛卡尔积?:每两个数据进行一个关联

select e.EmpName, d.DeptName
From Employee AS e cross JOIN Department as d;#78行数据

select count(*) from Employee; #13
select count(*) from Department; #6

-- Inner Join 内连接:只展示交叉的部分
select e.EmpName, d.DeptName
From Employee AS e
Inner JOIN Department as d
On e.DeptID = d.DeptID; #值相等作为条件, 10条数据

select e.*, d.DeptName # e的所有数据,也是只有10行
From Employee AS e
Inner JOIN Department as d
On e.DeptID = d.DeptID; #值相等作为条件, 10条数据

select e.*, d.DeptName # e的所有数据,也是只有10行
From Employee AS e
JOIN Department as d # Inner可以省略掉
On e.DeptID = d.DeptID; #值相等作为条件, 10条数据

select * from Employee; #有3行数据DeptID是null

-- Left JOIN:DeptID即使匹配不上,也展示出来,即上面未能展示的3行数据, 右侧表:只展示与左侧交叉的信息, 也叫Left outer join
select e.*, d.DeptName # e的所有数据,也是只有10行
From Employee AS e
Left JOIN Department as d
On e.DeptID = d.DeptID;

-- Right JOIN:右侧全部展示出来,财务部,行政部,人力部也展示,左侧只展示交叉部分, 也叫Right outer join
select e.*, d.DeptName # e的所有数据,也是只有10行
From Employee AS e
Right JOIN Department as d
On e.DeptID = d.DeptID;

-- Full JOIN:全连接, Mysql没有这个功能
select e.*, d.DeptName # e的所有数据,也是只有10行
From Employee AS e
Full JOIN Department as d
On e.DeptID = d.DeptID;

-- Union 3个数据全部合并到一起,并把重复的剔除掉
(select e.*, d.DeptName # e的所有数据,也是只有10行
From Employee AS e
Inner JOIN Department as d
On e.DeptID = d.DeptID)
UNION
(select e.*, d.DeptName # e的所有数据,也是只有10行
From Employee AS e
Left JOIN Department as d
On e.DeptID = d.DeptID)
UNION
(select e.*, d.DeptName # e的所有数据,也是只有10行
From Employee AS e
Right JOIN Department as d
On e.DeptID = d.DeptID)

-- Natural Join 自然连接,等同于inner join, 他自己找相同字段部分
select e.EmpName, d.DeptName
From Employee AS e
Natural JOIN Department as d;

select e.EmpName, d.DeptName
From Employee AS e
Inner JOIN Department as d
On e.DeptID = d.DeptID;

alter table Department Rename Column DeptID to DID;
-- 修改字段名后就会出现笛卡尔积
select e.EmpName, d.DeptName
From Employee AS e
Natural JOIN Department as d;

-- self join 自连接

DROP TABLE IF EXISTS EmployeeVar;
DROP TABLE IF EXISTS DepartmentVar;

-- 部门表
CREATE TABLE IF NOT EXISTS DepartmentVar (
	DeptID INT PRIMARY KEY AUTO_INCREMENT,
	DeptName VARCHAR(50) NOT NULL
);

INSERT INTO DepartmentVar(DeptName) VALUES('总部'),('开发部'),('咨询部'),('财务部'),('行政部'),('人力部');

alter table Department Rename Column DID to DeptID;

-- 员工表
CREATE TABLE IF NOT EXISTS EmployeeVar (
	EmpID INT PRIMARY KEY AUTO_INCREMENT,
	EmpName VARCHAR(50) NOT NULL UNIQUE,
	JobPosition ENUM('CEO','开发人员','顾问','经理','HR','会计','行政') NOT NULL,
	Salary DECIMAL(10,2) NOT NULL,
	DeptID INT,
	ManagerID INT,
	FOREIGN KEY(DeptID) REFERENCES Department(DeptID),
	FOREIGN KEY(ManagerID) REFERENCES EmployeeVar(EmpID)
);

INSERT INTO EmployeeVar VALUES
(NULL,'黄文隆','CEO',100000,1,NULL),
(NULL,'张吉','经理',30000,2,1),
(NULL,'谢彦','开发人员',15000,2,2),
(NULL,'傅智翔','开发人员',12000,2,2),
(NULL,'林玟','经理',35000,3,1),
(NULL,'荣姿康','顾问',12000,3,5),
(NULL,'林雅','经理',32500,3,1),
(NULL,'雷进宝','顾问',12500,3,7),
(NULL,'江奕','经理',31000,3,1),
(NULL,'李雅惠','顾问',26000,3,9),
(NULL,'吴佳瑞','HR',12000,NULL,NULL),
(NULL,'周琼玟','会计',14000,NULL,NULL),
(NULL,'黄文','行政',19000,NULL,NULL);




	EmpID INT PRIMARY KEY AUTO_INCREMENT,
	EmpName VARCHAR(50) NOT NULL UNIQUE,
	JobPosition ENUM('CEO','开发人员','顾问','经理','HR','会计','行政') NOT NULL,
	Salary DECIMAL(10,2) NOT NULL,
	DeptID INT,
	ManagerID INT,
	FOREIGN KEY(DeptID) REFERENCES Department(DeptID),#外键 关联到Department(DeptID)
	FOREIGN KEY(ManagerID) REFERENCES Manager(ManagerID)#外键 关联到Manager(ManagerID)

INSERT INTO Employee VALUES
(NULL,'黄文隆','CEO',100000,1,NULL),
(NULL,'张吉','经理',30000,2,1),
(NULL,'谢彦','开发人员',15000,2,2),
(NULL,'傅智翔','开发人员',12000,2,2),
(NULL,'林玟','经理',35000,3,1),
(NULL,'荣姿康','顾问',12000,3,3),
(NULL,'林雅','经理',32500,3,1),
(NULL,'雷进宝','顾问',12500,3,4),
(NULL,'江奕','经理',31000,3,1),
(NULL,'李雅惠','顾问',26000,3,5),
(NULL,'吴佳瑞','HR',12000,NULL,NULL),
(NULL,'周琼玟','会计',14000,NULL,NULL),
(NULL,'黄文','行政',19000,NULL,NULL);
--

-- self Join 自连接 查看员工的姓名以及上级的姓名
select e1.EmpName as '员工姓名', e2.EmpName as '上级姓名'
from employeeVAr AS e1
Inner Join
EmployeeVar AS e2
On e1.ManagerID = e2.EmpID;

-- 为什么要使用自查询
-- 查询高于全体员工平均工资的员工信息
-- SELECT * from Employee Where salary > '平均工资'
-- 查询全体员工的平均工资
-- 查询高于平均工资的员工

select avg(salary) from employee where Jobposition != 'CEO';
select * from employee where salary > 20916 AND Jobposition != 'CEO';

select * from employee where salary > (
select avg(salary) from employee where Jobposition != 'CEO') AND Jobposition != 'CEO';

select *
from employee
where salary > (
								select avg(salary)
								from employee
								where Jobposition != 'CEO'
								)
			AND Jobposition != 'CEO';

-- 关联查询的类型-- cross JOIN